{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\GitHub\\\\724events\\\\src\\\\containers\\\\Slider\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../contexts/DataContext\";\nimport { getMonth } from \"../../helpers/Date\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  const {\n    data\n  } = useData();\n  const [index, setIndex] = useState(0); // Crée une copie du tableau pour éviter de modifier l'original\n\n  const byDateDesc = [...(data === null || data === void 0 ? void 0 : data.focus)].sort((evtA, evtB) => new Date(evtB.date) - new Date(evtA.date)); // Fonction pour passer à la carte suivante\n\n  const nextCard = () => {\n    const nextIndex = index < byDateDesc.length - 1 ? index + 1 : 0;\n    setTimeout(() => setIndex(nextIndex), 5000);\n  }; // Déclenche nextCard au montage du composant et lors de la modification de byDateDesc\n\n\n  useEffect(() => {\n    nextCard(); // Nettoie le timeout lorsque le composant est démonté ou mis à jour\n\n    return () => clearTimeout(nextCard);\n  }, [byDateDesc]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SlideCardList\",\n    children: [byDateDesc.map((event, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      // Utiliser un identifiant unique si possible\n      className: `SlideCard ${index === idx ? \"display\" : \"hide\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.cover,\n        alt: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__descriptionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SlideCard__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getMonth(new Date(event.date))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, event.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SlideCard__paginationContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__pagination\",\n        children: byDateDesc.map((_, radioIdx) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio-button\",\n          checked: index === radioIdx,\n          onChange: () => setIndex(radioIdx) // Permet aux utilisateurs de sélectionner un slide\n          ,\n          readOnly: true\n        }, radioIdx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"O0IxBK3bSx2E5/5iaqD9rXSZzGQ=\", false, function () {\n  return [useData];\n});\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/steph/Documents/GitHub/724events/src/containers/Slider/index.js"],"names":["useEffect","useState","useData","getMonth","Slider","data","index","setIndex","byDateDesc","focus","sort","evtA","evtB","Date","date","nextCard","nextIndex","length","setTimeout","clearTimeout","map","event","idx","cover","title","description","id","_","radioIdx"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport { getMonth } from \"../../helpers/Date\";\r\nimport \"./style.scss\";\r\n\r\nconst Slider = () => {\r\n  const { data } = useData();\r\n  const [index, setIndex] = useState(0);\r\n\r\n  // Crée une copie du tableau pour éviter de modifier l'original\r\n  const byDateDesc = [...data?.focus].sort((evtA, evtB) => new Date(evtB.date) - new Date(evtA.date));\r\n\r\n  // Fonction pour passer à la carte suivante\r\n  const nextCard = () => {\r\n    const nextIndex = index < byDateDesc.length - 1 ? index + 1 : 0;\r\n    setTimeout(() => setIndex(nextIndex), 5000);\r\n  };\r\n\r\n  // Déclenche nextCard au montage du composant et lors de la modification de byDateDesc\r\n  useEffect(() => {\r\n    nextCard();\r\n    // Nettoie le timeout lorsque le composant est démonté ou mis à jour\r\n    return () => clearTimeout(nextCard);\r\n  }, [byDateDesc]);\r\n\r\n  return (\r\n    <div className=\"SlideCardList\">\r\n      {byDateDesc.map((event, idx) => (\r\n        <div\r\n          key={event.id} // Utiliser un identifiant unique si possible\r\n          className={`SlideCard ${index === idx ? \"display\" : \"hide\"}`}\r\n        >\r\n          <img src={event.cover} alt={event.title} />\r\n          <div className=\"SlideCard__descriptionContainer\">\r\n            <div className=\"SlideCard__description\">\r\n              <h3>{event.title}</h3>\r\n              <p>{event.description}</p>\r\n              <div>{getMonth(new Date(event.date))}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      <div className=\"SlideCard__paginationContainer\">\r\n        <div className=\"SlideCard__pagination\">\r\n          {byDateDesc.map((_, radioIdx) => (\r\n            <input\r\n              key={radioIdx}\r\n              type=\"radio\"\r\n              name=\"radio-button\"\r\n              checked={index === radioIdx}\r\n              onChange={() => setIndex(radioIdx)} // Permet aux utilisateurs de sélectionner un slide\r\n              readOnly\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"]},"metadata":{},"sourceType":"module"}