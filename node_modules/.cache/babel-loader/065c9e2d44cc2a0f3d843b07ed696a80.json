{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\GitHub\\\\724events\\\\src\\\\containers\\\\Slider\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../contexts/DataContext\";\nimport { getMonth } from \"../../helpers/Date\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Slider = () => {\n  _s();\n\n  const {\n    data\n  } = useData();\n  const [index, setIndex] = useState(0);\n  const byDateDesc = data === null || data === void 0 ? void 0 : data.focus.sort((evtA, evtB) =>\n  /* Inversement des valeurs dans la condition, initialement -1 : 1 pour obtenir l'odre décroissant */\n  new Date(evtA.date) < new Date(evtB.date) ? 1 : -1); // Ajout d'une constante pour initialiser l'indice dans notre tableau pour la partie focus\n\n  const ImgFocus = data === null || data === void 0 ? void 0 : data.focus.length;\n\n  const nextCard = () => {\n    setTimeout(() => setIndex(index < ImgFocus - 1 ? index + 1 : 0), 5000);\n  };\n\n  useEffect(() => {\n    nextCard();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SlideCardList\",\n    children: [byDateDesc === null || byDateDesc === void 0 ? void 0 : byDateDesc.map((event, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `SlideCard SlideCard--${index === idx ? \"display\" : \"hide\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.cover,\n        alt: \"forum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__descriptionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SlideCard__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getMonth(new Date(event.date))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, event.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SlideCard__paginationContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__pagination\",\n        children: byDateDesc === null || byDateDesc === void 0 ? void 0 : byDateDesc.map((focus, radioIdx) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio-button\"\n          /* Syntaxe modifiée idx en index */\n          ,\n          checked: index === radioIdx\n          /* Ajout de readOnly pour la gestion de l'état */\n          ,\n          readOnly: true\n        }, `${focus.title}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Slider, \"O0IxBK3bSx2E5/5iaqD9rXSZzGQ=\", false, function () {\n  return [useData];\n});\n\n_c = Slider;\nexport default Slider;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"sources":["C:/Users/steph/Documents/GitHub/724events/src/containers/Slider/index.js"],"names":["useEffect","useState","useData","getMonth","Slider","data","index","setIndex","byDateDesc","focus","sort","evtA","evtB","Date","date","ImgFocus","length","nextCard","setTimeout","map","event","idx","cover","title","description","radioIdx"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,cAAP;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAWH,OAAO,EAAxB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMO,UAAU,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,KAAN,CAAYC,IAAZ,CAAiB,CAACC,IAAD,EAAOC,IAAP;AACtC;AACI,MAAIC,IAAJ,CAASF,IAAI,CAACG,IAAd,IAAsB,IAAID,IAAJ,CAASD,IAAI,CAACE,IAAd,CAAtB,GAA4C,CAA5C,GAAgD,CAAC,CAFhC,CAAnB,CAHmB,CAQnB;;AACA,QAAMC,QAAQ,GAAGV,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,KAAN,CAAYO,MAA7B;;AAEA,QAAMC,QAAQ,GAAG,MAAM;AACrBC,IAAAA,UAAU,CAAC,MAAMX,QAAQ,CAACD,KAAK,GAAGS,QAAQ,GAAG,CAAnB,GAAuBT,KAAK,GAAG,CAA/B,GAAmC,CAApC,CAAf,EAAuD,IAAvD,CAAV;AACD,GAFD;;AAGAN,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ;AACT,GAFQ,CAAT;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,eACGT,UADH,aACGA,UADH,uBACGA,UAAU,CAAEW,GAAZ,CAAgB,CAACC,KAAD,EAAQC,GAAR,kBACf;AAEE,MAAA,SAAS,EAAG,wBACVf,KAAK,KAAKe,GAAV,GAAgB,SAAhB,GAA4B,MAC7B,EAJH;AAAA,8BAME;AAAK,QAAA,GAAG,EAAED,KAAK,CAACE,KAAhB;AAAuB,QAAA,GAAG,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA,kCACE;AAAA,sBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAIH,KAAK,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAMrB,QAAQ,CAAC,IAAIU,IAAJ,CAASO,KAAK,CAACN,IAAf,CAAD;AAAd;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,OACOM,KAAK,CAACG,KADb;AAAA;AAAA;AAAA;AAAA,YADD,CADH,eAmBE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,kBAEGf,UAFH,aAEGA,UAFH,uBAEGA,UAAU,CAAEW,GAAZ,CAAgB,CAACV,KAAD,EAAQgB,QAAR,kBACf;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAC;AACJ;AAJH;AAKE,UAAA,OAAO,EAAEnB,KAAK,KAAKmB;AACnB;AANF;AAOE,UAAA,QAAQ;AAPV,WACQ,GAAEhB,KAAK,CAACc,KAAM,EADtB;AAAA;AAAA;AAAA;AAAA,gBADD;AAFH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAvDD;;GAAMnB,M;UACaF,O;;;KADbE,M;AAyDN,eAAeA,MAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport { getMonth } from \"../../helpers/Date\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Slider = () => {\r\n  const { data } = useData();\r\n  const [index, setIndex] = useState(0);\r\n  const byDateDesc = data?.focus.sort((evtA, evtB) =>\r\n/* Inversement des valeurs dans la condition, initialement -1 : 1 pour obtenir l'odre décroissant */\r\n    new Date(evtA.date) < new Date(evtB.date) ? 1 : -1\r\n  );\r\n\r\n  // Ajout d'une constante pour initialiser l'indice dans notre tableau pour la partie focus\r\n  const ImgFocus = data?.focus.length;\r\n\r\n  const nextCard = () => {\r\n    setTimeout(() => setIndex(index < ImgFocus - 1 ? index + 1 : 0), 5000);\r\n  };\r\n  useEffect(() => {\r\n    nextCard();\r\n  });\r\n  return (\r\n    <div className=\"SlideCardList\">\r\n      {byDateDesc?.map((event, idx) => (\r\n        <div\r\n          key={event.title}\r\n          className={`SlideCard SlideCard--${\r\n            index === idx ? \"display\" : \"hide\"\r\n          }`}\r\n        >\r\n          <img src={event.cover} alt=\"forum\" />\r\n          <div className=\"SlideCard__descriptionContainer\">\r\n            <div className=\"SlideCard__description\">\r\n              <h3>{event.title}</h3>\r\n              <p>{event.description}</p>\r\n              <div>{getMonth(new Date(event.date))}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"SlideCard__paginationContainer\">\r\n        <div className=\"SlideCard__pagination\">\r\n          {/* Ajout de focus en paramètre pour créer des bullets en fonction de la clé focus dans notre tableau */}\r\n          {byDateDesc?.map((focus, radioIdx) => (\r\n            <input\r\n              key={`${focus.title}`}\r\n              type=\"radio\"\r\n              name=\"radio-button\"\r\n               /* Syntaxe modifiée idx en index */\r\n              checked={index === radioIdx}\r\n              /* Ajout de readOnly pour la gestion de l'état */\r\n              readOnly\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;"]},"metadata":{},"sourceType":"module"}