{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\GitHub\\\\724events\\\\src\\\\containers\\\\Slider\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useData } from \"../../contexts/DataContext\";\nimport { getMonth } from \"../../helpers/Date\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Slider = () => {\n  _s();\n  const {\n    data\n  } = useData();\n  const [index, setIndex] = useState(0);\n  const byDateDesc = data === null || data === void 0 ? void 0 : data.focus.sort((evtA, evtB) => /* Inversement des valeurs dans la condition, initialement -1 : 1 pour obtenir l'ordre décroissant */\n  new Date(evtA.date) < new Date(evtB.date) ? 1 : -1);\n\n  // Ajout d'une constante pour initialiser l'indice dans notre tableau pour la partie focus\n  const ImgFocus = data === null || data === void 0 ? void 0 : data.focus.length;\n\n  // État pour indiquer si le slider est en pause\n  const [paused, setPaused] = useState(false);\n  const nextCard = () => {\n    if (!paused) {\n      setTimeout(() => setIndex(index < ImgFocus - 1 ? index + 1 : 0), 5000);\n    }\n  };\n  useEffect(() => {\n    nextCard();\n  }, [index, paused]);\n\n  // Gestionnaire d'événement pour la pression de la touche \"Espace\"\n  const handleSpaceKeyDown = event => {\n    if (event.code === \"Space\") {\n      setPaused(!paused); // Inverser l'état de la pause lors de l'appui sur la touche \"Espace\"\n    }\n  };\n\n  // Ajout du gestionnaire d'événement à l'écoute de l'événement de pression de la touche \"Espace\"\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleSpaceKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleSpaceKeyDown);\n    };\n  }, []); // Effect uniquement lors du montage du composant\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SlideCardList\",\n    children: [byDateDesc === null || byDateDesc === void 0 ? void 0 : byDateDesc.map((event, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `SlideCard SlideCard--${index === idx ? \"display\" : \"hide\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: event.cover,\n        alt: \"forum\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__descriptionContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SlideCard__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: event.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: getMonth(new Date(event.date))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, event.title, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SlideCard__paginationContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SlideCard__pagination\",\n        children: byDateDesc === null || byDateDesc === void 0 ? void 0 : byDateDesc.map((focus, radioIdx) => /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"radio-button\"\n          /* Syntaxe modifiée idx en index */,\n          checked: index === radioIdx\n          /* Ajout de readOnly pour la gestion de l'état */,\n          readOnly: true\n        }, `${focus.title}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Slider, \"kqLAGd+WU4U//FVkTnGORKFDVfs=\", false, function () {\n  return [useData];\n});\n_c = Slider;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slider\");","map":{"version":3,"names":["useEffect","useState","useData","getMonth","jsxDEV","_jsxDEV","Slider","_s","data","index","setIndex","byDateDesc","focus","sort","evtA","evtB","Date","date","ImgFocus","length","paused","setPaused","nextCard","setTimeout","handleSpaceKeyDown","event","code","window","addEventListener","removeEventListener","className","children","map","idx","src","cover","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","description","radioIdx","type","name","checked","readOnly","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/GitHub/724events/src/containers/Slider/index.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport { getMonth } from \"../../helpers/Date\";\r\n\r\nimport \"./style.scss\";\r\n\r\nconst Slider = () => {\r\n  const { data } = useData();\r\n  const [index, setIndex] = useState(0);\r\n  const byDateDesc = data?.focus.sort((evtA, evtB) =>\r\n    /* Inversement des valeurs dans la condition, initialement -1 : 1 pour obtenir l'ordre décroissant */\r\n    new Date(evtA.date) < new Date(evtB.date) ? 1 : -1\r\n  );\r\n\r\n  // Ajout d'une constante pour initialiser l'indice dans notre tableau pour la partie focus\r\n  const ImgFocus = data?.focus.length;\r\n\r\n  // État pour indiquer si le slider est en pause\r\n  const [paused, setPaused] = useState(false);\r\n\r\n  const nextCard = () => {\r\n    if (!paused) {\r\n      setTimeout(() => setIndex(index < ImgFocus - 1 ? index + 1 : 0), 5000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    nextCard();\r\n  }, [index, paused]);\r\n\r\n  // Gestionnaire d'événement pour la pression de la touche \"Espace\"\r\n  const handleSpaceKeyDown = (event) => {\r\n    if (event.code === \"Space\") {\r\n      setPaused(!paused); // Inverser l'état de la pause lors de l'appui sur la touche \"Espace\"\r\n    }\r\n  };\r\n\r\n  // Ajout du gestionnaire d'événement à l'écoute de l'événement de pression de la touche \"Espace\"\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleSpaceKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleSpaceKeyDown);\r\n    };\r\n  }, []); // Effect uniquement lors du montage du composant\r\n\r\n  return (\r\n    <div className=\"SlideCardList\">\r\n      {byDateDesc?.map((event, idx) => (\r\n        <div\r\n          key={event.title}\r\n          className={`SlideCard SlideCard--${\r\n            index === idx ? \"display\" : \"hide\"\r\n          }`}\r\n        >\r\n          <img src={event.cover} alt=\"forum\" />\r\n          <div className=\"SlideCard__descriptionContainer\">\r\n            <div className=\"SlideCard__description\">\r\n              <h3>{event.title}</h3>\r\n              <p>{event.description}</p>\r\n              <div>{getMonth(new Date(event.date))}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      <div className=\"SlideCard__paginationContainer\">\r\n        <div className=\"SlideCard__pagination\">\r\n          {/* Ajout de focus en paramètre pour créer des bullets en fonction de la clé focus dans notre tableau */}\r\n          {byDateDesc?.map((focus, radioIdx) => (\r\n            <input\r\n              key={`${focus.title}`}\r\n              type=\"radio\"\r\n              name=\"radio-button\"\r\n              /* Syntaxe modifiée idx en index */\r\n              checked={index === radioIdx}\r\n              /* Ajout de readOnly pour la gestion de l'état */\r\n              readOnly\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}