{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\GitHub\\\\724events\\\\src\\\\containers\\\\Modal\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport Icon from \"../../components/Icon\";\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  _s();\n\n  let {\n    opened,\n    Content,\n    children\n  } = _ref;\n  const [isOpened, setIsOpened] = useState(opened);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [children({\n      isOpened,\n      setIsOpened\n    }), isOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [Content, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"close-modal\",\n          onClick: () => setIsOpened(false),\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Modal, \"dL2S0WSDlJcFU/RILwTB5gv/aUk=\");\n\n_c = Modal;\nModal.defaultProps = {\n  opened: false\n};\nModal.propTypes = {\n  opened: PropTypes.bool,\n  Content: PropTypes.node.isRequired,\n  children: PropTypes.func.isRequired\n};\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["C:/Users/steph/Documents/GitHub/724events/src/containers/Modal/index.js"],"names":["PropTypes","useState","Icon","Modal","opened","Content","children","isOpened","setIsOpened","defaultProps","propTypes","bool","node","isRequired","func"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAO,cAAP;;;;AAEA,MAAMC,KAAK,GAAG,QAAmC;AAAA;;AAAA,MAAlC;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAkC;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACG,MAAD,CAAxC;AACA,sBACE;AAAA,eACGE,QAAQ,CAAC;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CADX,EAEGD,QAAQ,iBACP;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,mBACGF,OADH,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,yBAAY,aAFd;AAGE,UAAA,OAAO,EAAE,MAAMG,WAAW,CAAC,KAAD,CAH5B;AAAA,iCAKE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADF;AAmBD,CArBD;;GAAML,K;;KAAAA,K;AAuBNA,KAAK,CAACM,YAAN,GAAqB;AACnBL,EAAAA,MAAM,EAAE;AADW,CAArB;AAIAD,KAAK,CAACO,SAAN,GAAkB;AAChBN,EAAAA,MAAM,EAAEJ,SAAS,CAACW,IADF;AAEhBN,EAAAA,OAAO,EAAEL,SAAS,CAACY,IAAV,CAAeC,UAFR;AAGhBP,EAAAA,QAAQ,EAAEN,SAAS,CAACc,IAAV,CAAeD;AAHT,CAAlB;AAMA,eAAeV,KAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport Icon from \"../../components/Icon\";\r\nimport \"./style.scss\";\r\n\r\nconst Modal = ({ opened, Content, children }) => {\r\n  const [isOpened, setIsOpened] = useState(opened);\r\n  return (\r\n    <>\r\n      {children({ isOpened, setIsOpened })}\r\n      {isOpened && (\r\n        <div className=\"modal\">\r\n          <div className=\"content\">\r\n            {Content}\r\n            <button\r\n              type=\"button\"\r\n              data-testid=\"close-modal\"\r\n              onClick={() => setIsOpened(false)}\r\n            >\r\n              <Icon name=\"close\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nModal.defaultProps = {\r\n  opened: false,\r\n}\r\n\r\nModal.propTypes = {\r\n  opened: PropTypes.bool,\r\n  Content: PropTypes.node.isRequired,\r\n  children: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal;\r\n"]},"metadata":{},"sourceType":"module"}