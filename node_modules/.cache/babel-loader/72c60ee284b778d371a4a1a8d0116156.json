{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\GitHub\\\\724events\\\\src\\\\contexts\\\\DataContext\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { createContext, useCallback, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataContext = /*#__PURE__*/createContext({});\nexport const api = {\n  loadData: async () => {\n    const json = await fetch(\"/events.json\");\n    return json.json();\n  }\n};\nexport const DataProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [error, setError] = useState(null);\n  const [data, setData] = useState(null);\n  const getData = useCallback(async () => {\n    try {\n      setData(await api.loadData());\n    } catch (err) {\n      setError(err);\n    }\n  }, []);\n  useEffect(() => {\n    if (data) return;\n    getData();\n  });\n  const events = data === null || data === void 0 ? void 0 : data.events;\n  const sortedEvents = events === null || events === void 0 ? void 0 : events.sort((evtA, evtB) => new Date(evtA.date) < new Date(evtB.date) ? 1 : -1);\n  const last = sortedEvents === null || sortedEvents === void 0 ? void 0 : sortedEvents[0];\n  return /*#__PURE__*/_jsxDEV(DataContext.Provider, {\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    value: {\n      data,\n      error,\n      last\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DataProvider, \"4rR2GqJadMLR+qqqGCfFIzLbGUE=\");\n\n_c = DataProvider;\nDataProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport const useData = () => {\n  _s2();\n\n  return useContext(DataContext);\n};\n\n_s2(useData, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default DataContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataProvider\");","map":{"version":3,"sources":["C:/Users/steph/Documents/GitHub/724events/src/contexts/DataContext/index.js"],"names":["PropTypes","createContext","useCallback","useContext","useEffect","useState","DataContext","api","loadData","json","fetch","DataProvider","children","error","setError","data","setData","getData","err","events","sortedEvents","sort","evtA","evtB","Date","date","last","propTypes","node","isRequired","useData"],"mappings":";;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,SAJF,EAKEC,QALF,QAMO,OANP;;AAQA,MAAMC,WAAW,gBAAGL,aAAa,CAAC,EAAD,CAAjC;AAEA,OAAO,MAAMM,GAAG,GAAG;AACjBC,EAAAA,QAAQ,EAAE,YAAY;AACpB,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,cAAD,CAAxB;AACA,WAAOD,IAAI,CAACA,IAAL,EAAP;AACD;AAJgB,CAAZ;AAOP,OAAO,MAAME,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAMY,OAAO,GAAGf,WAAW,CAAC,YAAY;AACtC,QAAI;AACFc,MAAAA,OAAO,CAAC,MAAMT,GAAG,CAACC,QAAJ,EAAP,CAAP;AACD,KAFD,CAEE,OAAOU,GAAP,EAAY;AACZJ,MAAAA,QAAQ,CAACI,GAAD,CAAR;AACD;AACF,GAN0B,EAMxB,EANwB,CAA3B;AAOAd,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,IAAJ,EAAU;AACVE,IAAAA,OAAO;AACR,GAHQ,CAAT;AAKA,QAAME,MAAM,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEI,MAArB;AACA,QAAMC,YAAY,GAAGD,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEE,IAAR,CAAa,CAACC,IAAD,EAAOC,IAAP,KAChC,IAAIC,IAAJ,CAASF,IAAI,CAACG,IAAd,IAAsB,IAAID,IAAJ,CAASD,IAAI,CAACE,IAAd,CAAtB,GAA4C,CAA5C,GAAgD,CAAC,CAD9B,CAArB;AAGA,QAAMC,IAAI,GAAGN,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAG,CAAH,CAAzB;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE;AACA,IAAA,KAAK,EAAE;AACLL,MAAAA,IADK;AAELF,MAAAA,KAFK;AAGLa,MAAAA;AAHK,KAFT;AAAA,cAQGd;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCM;;GAAMD,Y;;KAAAA,Y;AAoCbA,YAAY,CAACgB,SAAb,GAAyB;AACvBf,EAAAA,QAAQ,EAAEZ,SAAS,CAAC4B,IAAV,CAAeC;AADF,CAAzB;AAIA,OAAO,MAAMC,OAAO,GAAG;AAAA;;AAAA,SAAM3B,UAAU,CAACG,WAAD,CAAhB;AAAA,CAAhB;;IAAMwB,O;;AAEb,eAAexB,WAAf","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport {\r\n  createContext,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nconst DataContext = createContext({});\r\n\r\nexport const api = {\r\n  loadData: async () => {\r\n    const json = await fetch(\"/events.json\");\r\n    return json.json();\r\n  },\r\n};\r\n\r\nexport const DataProvider = ({ children }) => {\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n  const getData = useCallback(async () => {\r\n    try {\r\n      setData(await api.loadData());\r\n    } catch (err) {\r\n      setError(err);\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (data) return;\r\n    getData();\r\n  });\r\n\r\n  const events = data?.events;\r\n  const sortedEvents = events?.sort((evtA, evtB) =>\r\n    new Date(evtA.date) < new Date(evtB.date) ? 1 : -1\r\n  );\r\n  const last = sortedEvents?.[0];\r\n\r\n  \r\n  return (\r\n    <DataContext.Provider\r\n      // eslint-disable-next-line react/jsx-no-constructed-context-values\r\n      value={{\r\n        data,\r\n        error,\r\n        last\r\n      }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nDataProvider.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport const useData = () => useContext(DataContext);\r\n\r\nexport default DataContext;"]},"metadata":{},"sourceType":"module"}