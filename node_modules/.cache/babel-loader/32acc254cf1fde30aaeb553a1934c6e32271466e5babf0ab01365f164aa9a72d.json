{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\steph\\\\Documents\\\\GitHub\\\\724events\\\\src\\\\containers\\\\Events\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport EventCard from \"../../components/EventCard\";\nimport Select from \"../../components/Select\";\nimport { useData } from \"../../contexts/DataContext\";\nimport Modal from \"../Modal\";\nimport ModalEvent from \"../ModalEvent\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst perPage = 9;\nconst EventList = () => {\n  _s();\n  const {\n    data,\n    error\n  } = useData();\n  const [type, setType] = useState();\n  const [currentPage, setCurrentPage] = useState(1);\n\n  // Calcul de l'indice de début de la pagination\n  const startIdx = (currentPage - 1) * perPage;\n  // Calcul de l'indice de fin de la pagination\n  const endIdx = currentPage * perPage;\n\n  // Filtrage des événements en fonction du type sélectionné\n  const filteredEvents = (type ? data === null || data === void 0 ? void 0 : data.events.filter(event => event.type === type) : data === null || data === void 0 ? void 0 : data.events) || [];\n\n  // Sélection des événements pour la page actuelle\n  const paginatedEvents = filteredEvents.slice(startIdx, endIdx);\n  const changeType = evtType => {\n    // Réinitialisation de la page lorsqu'un nouveau type est sélectionné\n    setCurrentPage(1);\n    setType(evtType);\n  };\n\n  // Calcul du nombre de pages nécessaires avec Math.ceil\n  const pageNumber = Math.ceil(filteredEvents.length / perPage);\n  const typeList = new Set(data === null || data === void 0 ? void 0 : data.events.map(event => event.type));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error occurred\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), data === null ? \"loading\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"SelectTitle\",\n        children: \"Cat\\xE9gories\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        selection: Array.from(typeList),\n        onChange: value => value ? changeType(value) : changeType(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"events\",\n        className: \"ListContainer\",\n        children: paginatedEvents.map(event => /*#__PURE__*/_jsxDEV(Modal, {\n          Content: /*#__PURE__*/_jsxDEV(ModalEvent, {\n            event: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 46\n          }, this),\n          children: ({\n            setIsOpened\n          }) => /*#__PURE__*/_jsxDEV(EventCard, {\n            onClick: () => setIsOpened(true),\n            imageSrc: event.cover,\n            title: event.title,\n            date: new Date(event.date),\n            label: event.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 19\n          }, this)\n        }, event.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Pagination\",\n        children: [...Array(pageNumber)].map((_, n) =>\n        /*#__PURE__*/\n        // eslint-disable-next-line react/no-array-index-key\n        _jsxDEV(\"a\", {\n          href: \"#events\",\n          onClick: () => setCurrentPage(n + 1),\n          children: n + 1\n        }, n + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(EventList, \"tBxh+fVpKDnVW3tMmU3S4L1bPJA=\", false, function () {\n  return [useData];\n});\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["useState","EventCard","Select","useData","Modal","ModalEvent","jsxDEV","_jsxDEV","Fragment","_Fragment","perPage","EventList","_s","data","error","type","setType","currentPage","setCurrentPage","startIdx","endIdx","filteredEvents","events","filter","event","paginatedEvents","slice","changeType","evtType","pageNumber","Math","ceil","length","typeList","Set","map","children","fileName","_jsxFileName","lineNumber","columnNumber","className","selection","Array","from","onChange","value","id","Content","setIsOpened","onClick","imageSrc","cover","title","date","Date","label","_","n","href","_c","$RefreshReg$"],"sources":["C:/Users/steph/Documents/GitHub/724events/src/containers/Events/index.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport EventCard from \"../../components/EventCard\";\r\nimport Select from \"../../components/Select\";\r\nimport { useData } from \"../../contexts/DataContext\";\r\nimport Modal from \"../Modal\";\r\nimport ModalEvent from \"../ModalEvent\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst perPage = 9;\r\n\r\nconst EventList = () => {\r\n  const { data, error } = useData();\r\n  const [type, setType] = useState();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // Calcul de l'indice de début de la pagination\r\n  const startIdx = (currentPage - 1) * perPage;\r\n  // Calcul de l'indice de fin de la pagination\r\n  const endIdx = currentPage * perPage;\r\n\r\n  // Filtrage des événements en fonction du type sélectionné\r\n  const filteredEvents =\r\n    (type\r\n      ? data?.events.filter((event) => event.type === type)\r\n      : data?.events) || [];\r\n\r\n  // Sélection des événements pour la page actuelle\r\n  const paginatedEvents = filteredEvents.slice(startIdx, endIdx);\r\n\r\n  const changeType = (evtType) => {\r\n    // Réinitialisation de la page lorsqu'un nouveau type est sélectionné\r\n    setCurrentPage(1);\r\n    setType(evtType);\r\n  };  \r\n\r\n  // Calcul du nombre de pages nécessaires avec Math.ceil\r\n  const pageNumber = Math.ceil(filteredEvents.length / perPage);\r\n  const typeList = new Set(data?.events.map((event) => event.type));\r\n\r\n  return (\r\n    <>\r\n      {error && <div>An error occurred</div>}\r\n      {data === null ? (\r\n        \"loading\"\r\n      ) : (\r\n        <>\r\n          <h3 className=\"SelectTitle\">Catégories</h3>\r\n          <Select\r\n            selection={Array.from(typeList)}\r\n            onChange={(value) => (value ? changeType(value) : changeType(null))}\r\n          />\r\n          <div id=\"events\" className=\"ListContainer\">\r\n            {paginatedEvents.map((event) => (\r\n              <Modal key={event.id} Content={<ModalEvent event={event} />}>\r\n                {({ setIsOpened }) => (\r\n                  <EventCard\r\n                    onClick={() => setIsOpened(true)}\r\n                    imageSrc={event.cover}\r\n                    title={event.title}\r\n                    date={new Date(event.date)}\r\n                    label={event.type}\r\n                  />\r\n                )}\r\n              </Modal>\r\n            ))}\r\n          </div>\r\n          <div className=\"Pagination\">\r\n            {[...Array(pageNumber)].map((_, n) => (\r\n              // eslint-disable-next-line react/no-array-index-key\r\n              <a key={n + 1} href=\"#events\" onClick={() => setCurrentPage(n + 1)}>\r\n                {n + 1}\r\n              </a>\r\n            ))}\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EventList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}